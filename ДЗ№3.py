# 1. Даны значения зарплат из выборки выпускников:
# 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.
# Посчитать (желательно без использования статистических методов наподобие std, var, mean) среднее арифметическое, среднее квадратичное отклонение,
# смещенную и несмещенную оценки дисперсий для данной выборки.
import numpy as np
import math as sqrt

zp = [100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150]

# mx = (sum(zp))/len(zp)
np.mean(zp)
# 65.3

#sqrt(sum((i-sum(zp)/len(zp))**2 for i in zp)/(len(zp)))
np.std(zp)
# 30.824

#sum((i-sum(zp)/len(zp))**2 for i in zp)/(len(zp))
np.var(zp)
# 950.11

#sum((i-sum(zp)/len(zp))**2 for i in zp)/(len(zp)-1)
np.var(zp,ddof=1)
# 1000.116

# 2. В первом ящике находится 8 мячей, из которых 5 - белые.
# Во втором ящике - 12 мячей, из которых 5 белых.
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4.
# Какова вероятность того, что 3 мяча белые?

A1 = 5/8*4/7*5/12*7/11*6/10*5/10
A2 = 5/8*3/7*5/12*4/11*7/10*6/9
A3 = 3/8*2/7*5/12*4/11*3/10*5/9
A = A1+A2+A3
# print(A)
#  0.05

# 3. На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень.
# Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6.
# Найти вероятность того, что выстрел произведен:
# a). первым спортсменом

B = (1/3*0.9)/(1/3*0.9+1/3*0.8+1/3*0.6)

#0.391

# б). вторым спортсменом
C = (1/3*0.8)/(1/3*0.9+1/3*0.8+1/3*0.6)
# 0.347

# в). третьим спортсменом.
D = (1/3*0.6)/(1/3*0.9+1/3*0.8+1/3*0.6)
#0.261

# 4. В университет на факультеты A и B поступило равное количество студентов,
# а на факультет C студентов поступило столько же, сколько на A и B вместе.
# Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8.
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9.
# Студент сдал первую сессию. Какова вероятность, что он учится:
# a). на факультете A
# a=b c = 2a 25% 25% 50%

H = (1/4*0.8)/(1/4*0.8+1/4*0.7+1/2*0.9)
#0.242

# б). на факультете B

G = (1/4*0.7)/(1/4*0.8+1/4*0.7+1/2*0.9)
#0.212

# в). на факультете C?

K = (1/2*0.9)/(1/4*0.8+1/4*0.7+1/2*0.9)
#0.545

# 5. Устройство состоит из трех деталей.
# Для первой детали вероятность выйти из строя в первый месяц равна 0.1, для второй - 0.2, для третьей - 0.25.
# Какова вероятность того, что в первый месяц выйдут из строя:
# а). все детали

from math import factorial


def arg(n, k, p, q):
    return float(factorial(n) / (factorial(k) * factorial(n - k)) * (p ** k) * q ** (n - k))
L = arg(3, 3, 0.55, 0.45)
# 0.166

# б). только две детали
def arg(n, k, p, q):
    return float(factorial(n) / (factorial(k) * factorial(n - k)) * (p ** k) * q ** (n - k))
I1 = arg(3, 2, 0.3, 0.7)
I2 = arg(3, 2, 0.45, 0.55)
I3 = arg(3, 2, 0.35, 0.65)
I = I1+I2+I3
# 0.762

# в). хотя бы одна

def arg(n, k, p, q):
    return float(factorial(n) / (factorial(k) * factorial(n - k)) * (p ** k) * q ** (n - k))
P1 = arg(3, 1, 0.1, 0.9)
P2 = arg(3, 1, 0.2, 0.8)
P3 = arg(3, 1, 0.25, 0.75)
P = P1+P2+P3
# 1